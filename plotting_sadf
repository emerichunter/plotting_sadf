#!/bin/bash

# plotting_sadf a.k.a sar2plot

#TODO :
# sar instead of sadf if possible
# option for format or type of terminal (-f), type of data (-t) , size  (-s), duration/date (-d)
 

GNUPLOT=`which gnuplot`


if [ $# -eq 0 ]
then
        echo "Missing options!"
        echo "(run $0 -h for help)"
        echo ""
        exit 0
fi


while getopts "h:t:f:w:l:d:o" OPTION; do
        case $OPTION in

                h)
                        echo "Usage:"
                        echo "plotting_sadf -h "
                        echo "plotting_sadf -t [cpu|io|pages|ram|q|swap] -d [-1|-2|...] -f [dumb|png] -w [170] -h [45] -o ['outputname']"
                        echo "" 
                        echo "   -h     help (this output)"
                        exit 0
                        ;;

                t)
                        TYPE="$OPTARG"
                        ;;
						
		f)
			FORMAT="$OPTARG"
                        ;;

		w)
			WIDTH="$OPTARG"
                        ;;

                l)
			HEIGHT="$OPTARG"
                        ;;

		d)
			DAY="$OPTARG"
			;;
						
		o) 
			OUTPUT="$OPTARG"
			;;


        esac
done

echo '$TYPE'

# DAY for the stats
if [ -z "$DAY"   ]; then
  DAY=""
elif [ "$DAY" -lt 0 ]; then
  DAY="$DAY"
else
  DAY=""
fi

echo "$DAY"

echo '$FORMAT'
echo '$WIDTH'
echo '$HEIGHT'
echo '$OUTPUT'


# SADF command
SADFDAY="sadf $DAY -dh" ;

echo "$SADFDAY"


# Type of stats : make something nicer
if [ $TYPE = "swap" ]
then
        echo "swap";
		TITLE="set title 'SWAP Utilization'"
		$SADFDAY -- -S>stats.dat
		PLOTYTICS="set y2tics nomirror autofreq"
		PLOTYLABEL='set ylabel "% Utilization" \ set y2label "kb Utilization"'
		PLOTSTR='plot datafile using 3:5  axis x1y2 title "kbswpfree" with lines, datafile using 3:4  axis x1y2 title "kbswpused" with lines, datafile using 3:5 axis x1y1 title "%swpused" with lines, datafile using 3:6  axis x1y2 title "kbswpcad" with lines,  datafile using 3:7 axis x1y1 title "%swpcad" with lines'

elif [ $TYPE = "io" ]
then
        echo "io transfert";
		TITLE="set title 'I/O transferts Utilization'"
		$SADFDAY -- -b>stats.dat
		PLOTYTICS="set y2tics nomirror autofreq"
		PLOTYLABEL="set ylabel 'IO transferts per second' \ set y2label 'Blocks Utilization'"
		PLOTSTR='plot datafile using 3:5 axis x1y1  title "tps" with lines, datafile using 3:4  axis x1y1 title "rtps" with lines, datafile using 3:5 axis x1y1 title "wtps" with lines, datafile using 3:6  axis x1y2 title "bread/s" with lines,  datafile using 3:7 axis x1y2 title "bwrtn/s" with lines'

elif [ $TYPE = "q" ]
then
        echo "queue";
		TITLE="set title 'Queue Utilization'"
		$SADFDAY -- -q>stats.dat
		PLOTYTICS="set y2tics nomirror autofreq"
		PLOTYLABEL="set ylabel 'nb process' \ set y2label '% Utilization'"
		PLOTSTR='plot datafile using 3:4 axis x1y1 title "runq-sz" with lines, datafile using 3:5 axis x1y1 title "plist-sz" with lines, datafile using 3:6 axis x1y2 title "ldavg-1m%" with lines, datafile using 3:7 axis x1y2 title "ldavg-5m%" with lines, datafile using 3:8 axis x1y2 title "ldavg-15m%" with lines'

elif [ $TYPE = "ram" ]
then
        echo "ram";
		TITLE="set title 'RAM Utilization'"
	 	$SADFDAY -- -r >stats.dat
		PLOTYTICS="set y2tics nomirror autofreq"
		PLOTYLABEL="set ylabel 'kb Utilization' \ set y2label '% Utilization'"
		PLOTSTR='plot  datafile using 3:4  axis x1y1 title "kbfree" with lines, datafile using 3:5 axis x1y1 title "kbused" with lines,   datafile using 3:7 axis x1y1 title "kbbuff" with lines,  datafile using 3:8 axis x1y1 title "kbcached" with lines, datafile using 3:9 axis x1y1 title "kbcommit" with lines'

elif [ $TYPE = "cpu" ]
then
        echo "cpu";
		TITLE="set title 'Processor Utilization'"
		$SADFDAY > stats.dat
		PLOTYLABEL="set ylabel '% Utilization'"
		PLOTSTR='plot datafile using 3:5 title "%user" with lines, datafile using 3:6 title "%nice" with lines, datafile using 3:7 title "%system" with lines, datafile using 3:8 title "%iowait" with lines'

else 
		echo "default is cpu!";
		TITLE="set title 'Processor Utilization'"
		$SADFDAY > stats.dat
		PLOTYLABEL="set ylabel '% Utilization'"
		PLOTSTR='plot datafile using 3:5 title "%user" with lines, datafile using 3:6 title "%nice" with lines, datafile using 3:7 title "%system" with lines, datafile using 3:8 title "%iowait" with lines'

fi

# DEBUG
echo "$TITLE"
echo "$PLOTYTICS"
echo "$PLOTYLABEL"
echo "$PLOTSTR"
echo "$OUTPUT" 

# FORMAT - terminal 



#if [ $FORMAT = "png" ]
#then
#        echo "png";
#		$SADFDAY > stats.cpu.dat
#else 
#		echo "default is cpu!";
#		$SADFDAY > stats.cpu.dat
#fi


# SIZE
if [ ! -z "$WIDTH" ] && [ ! -z "$HEIGHT" ]
then 
   echo 'OK'
elif [ -z "$WIDTH" ] && [ -z "$HEIGHT" ]
then	

   if [ "$FORMAT" = "png" ] 
   then 
   	WIDTH=640
	HEIGHT=480
	echo "standard 640x480 has been chosen"
   else
	WIDTH=""
	HEIGHT=""
	echo "$WIDTH $EHIGHT"
   	echo "Dumb terminal is default!"
   fi

else
	echo "Please fill both -w AND -h or NONE!"
	exit 1;
fi


if [ "$FORMAT" = "png" ]; 
then
echo 'datafile="stats.dat" 
set terminal png medium size '$WIDTH','$HEIGHT' 
set output '$OUTPUT'
'$TITLE'
set xdata time
set timefmt "%Y-%m-%d %H:%M:%S"
set datafile separator ";"
set key below
set grid xtics ytics
set xlabel "Time"
'$PLOTYLABEL'
'$PLOTSTR' '> sadf.plot


else

# PLOT in shell dumb
echo 'datafile="stats.dat" 
set terminal dumb '$WIDTH' '$HEIGHT'
'$TITLE'
set xdata time
set timefmt "%Y-%m-%d %H:%M:%S"
set datafile separator ";"
set grid xtics ytics
set key below
set xlabel "Time"
'$PLOTYLABEL'
'$PLOTSTR' '> sadf.plot

fi

# addition of last line 
#  echo  "'scaling-$SET.txt' using 1:3 axis x1y1 title '$DESCR' with linespoints $DELIM" >> multi-scale.plot
#echo "$PLOTSTR" >> sadf.plot 

# Plotting if GNUplot exists
if [ ! -z $GNUPLOT ] && [ -x $GNUPLOT ]; then
  gnuplot sadf.plot 2>&1 | grep -v "Warning: empty"
  #mv clients-sets.png results/
  #rm sadf.plot
fi
